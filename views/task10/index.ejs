<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      body {
        font-family: Arial, sans-serif;
      }

      table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
      }

      th,
      td {
        border: 1px solid #dddddd;
        padding: 8px;
        text-align: left;
      }

      th {
        background-color: #f2f2f2;
      }

      tr:nth-child(even) {
        background-color: #f2f2f2;
      }

      button {
        background-color: #4caf50;
        color: white;
        padding: 8px 12px;
        border: none;
        cursor: pointer;
        border-radius: 4px;
      }

      button:hover {
        background-color: #45a049;
      }
    </style>
  </head>
  <body>
    <button onclick="previousPage()">Previous</button>
    <button onclick="nextPage()">Next</button>
    <input
      type="text"
      id="searchInput"
      placeholder="Search..."
      oninput="searchData()"
    />

    <script>
      let currentPage = 1;
      const pageSize = 10;
      let originalData = [];

      async function fetchdata() {
        const response = await fetch(
          "https://jsonplaceholder.typicode.com/posts"
        );
        const data = await response.json();
        originalData = data;
        return data;
      }

      async function createtable() {
        const finaldata = await fetchdata();
        renderTable(finaldata);
      }

      function renderTable(data) {
        clearTable();
        const table = document.createElement("table");
        const tbody = document.createElement("tbody");
        table.appendChild(tbody);
        document.body.appendChild(table);

        //thead
        const keys = Object.keys(data[0]);
        const thead = document.createElement("thead");
        const tr = document.createElement("tr");
        keys.forEach((key) => {
          const th = document.createElement("th");
          th.textContent = key;
          tr.appendChild(th);
        });
        const details = document.createElement("th");
        details.textContent = "Details";
        tr.appendChild(details);
        thead.appendChild(tr);
        table.appendChild(thead);

        //tbody
        const startIndex = (currentPage - 1) * pageSize;
        const endIndex = Math.min(startIndex + pageSize, data.length);
        for (let i = startIndex; i < endIndex; i++) {
          const item = data[i];
          const tr = document.createElement("tr");

          Object.values(item).forEach((value) => {
            const td1 = document.createElement("td");
            const text = document.createTextNode(value);
            td1.appendChild(text);
            tr.appendChild(td1);
          });

          const td2 = document.createElement("td");
          const button = document.createElement("button");
          button.textContent = "Details";
          button.onclick = function () {
            location.href = `post/${item.id}`
            logPostDetails(item.id);
          };
          td2.appendChild(button);
          tr.appendChild(td2);
          tbody.appendChild(tr);
        }
      }

      function clearTable() {
        const table = document.querySelector("table");
        if (table) {
          table.remove();
        }
      }

      function previousPage() {
        if (currentPage > 1) {
          currentPage--;
          renderTable(originalData);
        }
      }

      function nextPage() {
        let data = originalData;
        const input = document
          .getElementById("searchInput")
          .value.trim()
          .toLowerCase();
        if (input !== "") {
          data = originalData.filter((item) => {
            return Object.values(item).some((value) => {
              return value.toString().toLowerCase().includes(input);
            });
          });
        }

        const totalPages = Math.ceil(data.length / pageSize);
        if (currentPage < totalPages) {
          currentPage++;
          renderTable(data);
        }
      }

      function logPostDetails(postId) {
        console.log("Post ID:", postId);
      }

      function searchData() {
        const input = document
          .getElementById("searchInput")
          .value.trim()
          .toLowerCase();

        if (input === "") {
          currentPage = 1;
          renderTable(originalData);
          return;
        }

        const searchWords = input.split(" ").filter(Boolean);
        const filteredData = originalData.filter((item) => {
          return searchWords.every((word) => {
            return Object.values(item).some((value) => {
              return value.toString().toLowerCase().includes(word);
            });
          });
          
        });

        currentPage = 1;
        renderTable(filteredData);
      }

      createtable();
    </script>
  </body>
</html>
